{"version":3,"sources":["../assets/scripts/lib/_classie.js","../assets/scripts/lib/_selectfx.js","../assets/scripts/select.js"],"names":["window","classReg","className","RegExp","toggleClass","elem","c","fn","hasClass","removeClass","addClass","document","documentElement","classList","contains","add","remove","test","replace","classie","has","toggle","define","amd","hasParent","e","p","el","target","srcElement","parentNode","extend","a","b","key","hasOwnProperty","SelectFx","options","this","_init","prototype","newTab","stickyPlaceholder","onChange","val","selectedOpt","querySelector","hasDefaultPlaceholder","disabled","_createSelectEl","selOpts","slice","call","selEl","querySelectorAll","selOptsCount","length","current","indexOf","selPlaceholder","_initEvents","createOptionHTML","optclass","classes","link","foundSelected","getAttribute","value","textContent","children","forEach","tag","tagName","toLowerCase","label","opt","opts_el","createElement","tabIndex","innerHTML","appendChild","self","addEventListener","_toggleSelect","idx","_changeOption","ev","_isOpen","keyCode","which","preventDefault","_navigateOpts","preSelCurrent","dir","tmpcurrent","_removeFocus","oldOpt","open","location","focusEl","$","trigger"],"mappings":"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","file":"select.js","sourcesContent":["/*!\r\n * classie - class helper functions\r\n * from bonzo https://github.com/ded/bonzo\r\n *\r\n * classie.has( elem, 'my-class' ) -> true/false\r\n * classie.add( elem, 'my-new-class' )\r\n * classie.remove( elem, 'my-unwanted-class' )\r\n * classie.toggle( elem, 'my-class' )\r\n */\r\n\r\n/*jshint browser: true, strict: true, undef: true */\r\n/*global define: false */\r\n\r\n( function( window ) {\r\n\r\n'use strict';\r\n\r\n// class helper functions from bonzo https://github.com/ded/bonzo\r\n\r\nfunction classReg( className ) {\r\n  return new RegExp(\"(^|\\\\s+)\" + className + \"(\\\\s+|$)\");\r\n}\r\n\r\n// classList support for class management\r\n// altho to be fair, the api sucks because it won't accept multiple classes at once\r\nvar hasClass, addClass, removeClass;\r\n\r\nif ( 'classList' in document.documentElement ) {\r\n  hasClass = function( elem, c ) {\r\n    return elem.classList.contains( c );\r\n  };\r\n  addClass = function( elem, c ) {\r\n    elem.classList.add( c );\r\n  };\r\n  removeClass = function( elem, c ) {\r\n    elem.classList.remove( c );\r\n  };\r\n}\r\nelse {\r\n  hasClass = function( elem, c ) {\r\n    return classReg( c ).test( elem.className );\r\n  };\r\n  addClass = function( elem, c ) {\r\n    if ( !hasClass( elem, c ) ) {\r\n      elem.className = elem.className + ' ' + c;\r\n    }\r\n  };\r\n  removeClass = function( elem, c ) {\r\n    elem.className = elem.className.replace( classReg( c ), ' ' );\r\n  };\r\n}\r\n\r\nfunction toggleClass( elem, c ) {\r\n  var fn = hasClass( elem, c ) ? removeClass : addClass;\r\n  fn( elem, c );\r\n}\r\n\r\nvar classie = {\r\n  // full names\r\n  hasClass: hasClass,\r\n  addClass: addClass,\r\n  removeClass: removeClass,\r\n  toggleClass: toggleClass,\r\n  // short names\r\n  has: hasClass,\r\n  add: addClass,\r\n  remove: removeClass,\r\n  toggle: toggleClass\r\n};\r\n\r\n// transport\r\nif ( typeof define === 'function' && define.amd ) {\r\n  // AMD\r\n  define( classie );\r\n} else {\r\n  // browser global\r\n  window.classie = classie;\r\n}\r\n\r\n})( window );\r\n","/**\r\n * selectFx.js v1.0.0\r\n * http://www.codrops.com\r\n *\r\n * Licensed under the MIT license.\r\n * http://www.opensource.org/licenses/mit-license.php\r\n *\r\n * Copyright 2014, Codrops\r\n * http://www.codrops.com\r\n */\r\n;( function( window ) {\r\n\r\n\t'use strict';\r\n\r\n\t/**\r\n\t * based on from https://github.com/inuyaksa/jquery.nicescroll/blob/master/jquery.nicescroll.js\r\n\t */\r\n\tfunction hasParent( e, p ) {\r\n\t\tif (!e) return false;\r\n\t\tvar el = e.target||e.srcElement||e||false;\r\n\t\twhile (el && el != p) {\r\n\t\t\tel = el.parentNode||false;\r\n\t\t}\r\n\t\treturn (el!==false);\r\n\t};\r\n\r\n\t/**\r\n\t * extend obj function\r\n\t */\r\n\tfunction extend( a, b ) {\r\n\t\tfor( var key in b ) {\r\n\t\t\tif( b.hasOwnProperty( key ) ) {\r\n\t\t\t\ta[key] = b[key];\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn a;\r\n\t}\r\n\r\n\t/**\r\n\t * SelectFx function\r\n\t */\r\n\tfunction SelectFx( el, options ) {\r\n\t\tthis.el = el;\r\n\t\tthis.options = extend( {}, this.options );\r\n\t\textend( this.options, options );\r\n\t\tthis._init();\r\n\t}\r\n\r\n\t/**\r\n\t * SelectFx options\r\n\t */\r\n\tSelectFx.prototype.options = {\r\n\t\t// if true all the links will open in a new tab.\r\n\t\t// if we want to be redirected when we click an option, we need to define a data-link attr on the option of the native select element\r\n\t\tnewTab : true,\r\n\t\t// when opening the select element, the default placeholder (if any) is shown\r\n\t\tstickyPlaceholder : true,\r\n\t\t// callback when changing the value\r\n\t\tonChange : function( val ) { return false; }\r\n\t}\r\n\r\n\t/**\r\n\t * init function\r\n\t * initialize and cache some vars\r\n\t */\r\n\tSelectFx.prototype._init = function() {\r\n\t\t// check if we are using a placeholder for the native select box\r\n\t\t// we assume the placeholder is disabled and selected by default\r\n\t\tvar selectedOpt = this.el.querySelector( 'option[selected]' );\r\n\t\tthis.hasDefaultPlaceholder = selectedOpt && selectedOpt.disabled;\r\n\r\n\t\t// get selected option (either the first option with attr selected or just the first option)\r\n\t\tthis.selectedOpt = selectedOpt || this.el.querySelector( 'option' );\r\n\r\n\t\t// create structure\r\n\t\tthis._createSelectEl();\r\n\r\n\t\t// all options\r\n\t\tthis.selOpts = [].slice.call( this.selEl.querySelectorAll( 'li[data-option]' ) );\r\n\r\n\t\t// total options\r\n\t\tthis.selOptsCount = this.selOpts.length;\r\n\r\n\t\t// current index\r\n\t\tthis.current = this.selOpts.indexOf( this.selEl.querySelector( 'li.cs-selected' ) ) || -1;\r\n\r\n\t\t// placeholder elem\r\n\t\tthis.selPlaceholder = this.selEl.querySelector( 'span.cs-placeholder' );\r\n\r\n\t\t// init events\r\n\t\tthis._initEvents();\r\n\t}\r\n\r\n\t/**\r\n\t * creates the structure for the select element\r\n\t */\r\n\tSelectFx.prototype._createSelectEl = function() {\r\n\t\tvar self = this, options = '', createOptionHTML = function(el) {\r\n\t\t\tvar optclass = '', classes = '', link = '';\r\n\r\n\t\t\tif( el.selectedOpt && !this.foundSelected && !this.hasDefaultPlaceholder ) {\r\n\t\t\t\tclasses += 'cs-selected ';\r\n\t\t\t\tthis.foundSelected = true;\r\n\t\t\t}\r\n\t\t\t// extra classes\r\n\t\t\tif( el.getAttribute( 'data-class' ) ) {\r\n\t\t\t\tclasses += el.getAttribute( 'data-class' );\r\n\t\t\t}\r\n\t\t\t// link options\r\n\t\t\tif( el.getAttribute( 'data-link' ) ) {\r\n\t\t\t\tlink = 'data-link=' + el.getAttribute( 'data-link' );\r\n\t\t\t}\r\n\r\n\t\t\tif( classes !== '' ) {\r\n\t\t\t\toptclass = 'class=\"' + classes + '\" ';\r\n\t\t\t}\r\n\r\n\t\t\treturn '<li ' + optclass + link + ' data-option data-value=\"' + el.value + '\"><span>' + el.textContent + '</span></li>';\r\n\t\t};\r\n\r\n\t\t[].slice.call( this.el.children ).forEach( function(el) {\r\n\t\t\tif( el.disabled ) { return; }\r\n\r\n\t\t\tvar tag = el.tagName.toLowerCase();\r\n\r\n\t\t\tif( tag === 'option' ) {\r\n\t\t\t\toptions += createOptionHTML(el);\r\n\t\t\t}\r\n\t\t\telse if( tag === 'optgroup' ) {\r\n\t\t\t\toptions += '<li class=\"cs-optgroup\"><span>' + el.label + '</span><ul>';\r\n\t\t\t\t[].slice.call( el.children ).forEach( function(opt) {\r\n\t\t\t\t\toptions += createOptionHTML(opt);\r\n\t\t\t\t} );\r\n\t\t\t\toptions += '</ul></li>';\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t\tvar opts_el = '<div class=\"cs-options\"><ul>' + options + '</ul></div>';\r\n\t\tthis.selEl = document.createElement( 'div' );\r\n\t\tthis.selEl.className = this.el.className;\r\n\t\tthis.selEl.tabIndex = this.el.tabIndex;\r\n\t\tthis.selEl.innerHTML = '<span class=\"cs-placeholder\">' + this.selectedOpt.textContent + '</span>' + opts_el;\r\n\t\tthis.el.parentNode.appendChild( this.selEl );\r\n\t\tthis.selEl.appendChild( this.el );\r\n\t}\r\n\r\n\t/**\r\n\t * initialize the events\r\n\t */\r\n\tSelectFx.prototype._initEvents = function() {\r\n\t\tvar self = this;\r\n\r\n\t\t// open/close select\r\n\t\tthis.selPlaceholder.addEventListener( 'click', function() {\r\n\t\t\tself._toggleSelect();\r\n\t\t} );\r\n\r\n\t\t// clicking the options\r\n\t\tthis.selOpts.forEach( function(opt, idx) {\r\n\t\t\topt.addEventListener( 'click', function() {\r\n\t\t\t\tself.current = idx;\r\n\t\t\t\tself._changeOption();\r\n\t\t\t\t// close select elem\r\n\t\t\t\tself._toggleSelect();\r\n\t\t\t} );\r\n\t\t} );\r\n\r\n\t\t// close the select element if the target it´s not the select element or one of its descendants..\r\n\t\tdocument.addEventListener( 'click', function(ev) {\r\n\t\t\tvar target = ev.target;\r\n\t\t\tif( self._isOpen() && target !== self.selEl && !hasParent( target, self.selEl ) ) {\r\n\t\t\t\tself._toggleSelect();\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t\t// keyboard navigation events\r\n\t\tthis.selEl.addEventListener( 'keydown', function( ev ) {\r\n\t\t\tvar keyCode = ev.keyCode || ev.which;\r\n\r\n\t\t\tswitch (keyCode) {\r\n\t\t\t\t// up key\r\n\t\t\t\tcase 38:\r\n\t\t\t\t\tev.preventDefault();\r\n\t\t\t\t\tself._navigateOpts('prev');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t// down key\r\n\t\t\t\tcase 40:\r\n\t\t\t\t\tev.preventDefault();\r\n\t\t\t\t\tself._navigateOpts('next');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t// space key\r\n\t\t\t\tcase 32:\r\n\t\t\t\t\tev.preventDefault();\r\n\t\t\t\t\tif( self._isOpen() && typeof self.preSelCurrent != 'undefined' && self.preSelCurrent !== -1 ) {\r\n\t\t\t\t\t\tself._changeOption();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tself._toggleSelect();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t// enter key\r\n\t\t\t\tcase 13:\r\n\t\t\t\t\tev.preventDefault();\r\n\t\t\t\t\tif( self._isOpen() && typeof self.preSelCurrent != 'undefined' && self.preSelCurrent !== -1 ) {\r\n\t\t\t\t\t\tself._changeOption();\r\n\t\t\t\t\t\tself._toggleSelect();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t// esc key\r\n\t\t\t\tcase 27:\r\n\t\t\t\t\tev.preventDefault();\r\n\t\t\t\t\tif( self._isOpen() ) {\r\n\t\t\t\t\t\tself._toggleSelect();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t} );\r\n\t}\r\n\r\n\t/**\r\n\t * navigate with up/dpwn keys\r\n\t */\r\n\tSelectFx.prototype._navigateOpts = function(dir) {\r\n\t\tif( !this._isOpen() ) {\r\n\t\t\tthis._toggleSelect();\r\n\t\t}\r\n\r\n\t\tvar tmpcurrent = typeof this.preSelCurrent != 'undefined' && this.preSelCurrent !== -1 ? this.preSelCurrent : this.current;\r\n\r\n\t\tif( dir === 'prev' && tmpcurrent > 0 || dir === 'next' && tmpcurrent < this.selOptsCount - 1 ) {\r\n\t\t\t// save pre selected current - if we click on option, or press enter, or press space this is going to be the index of the current option\r\n\t\t\tthis.preSelCurrent = dir === 'next' ? tmpcurrent + 1 : tmpcurrent - 1;\r\n\t\t\t// remove focus class if any..\r\n\t\t\tthis._removeFocus();\r\n\t\t\t// add class focus - track which option we are navigating\r\n\t\t\tclassie.add( this.selOpts[this.preSelCurrent], 'cs-focus' );\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * open/close select\r\n\t * when opened show the default placeholder if any\r\n\t */\r\n\tSelectFx.prototype._toggleSelect = function() {\r\n\t\t// remove focus class if any..\r\n\t\tthis._removeFocus();\r\n\r\n\t\tif( this._isOpen() ) {\r\n\t\t\tif( this.current !== -1 ) {\r\n\t\t\t\t// update placeholder text\r\n\t\t\t\tthis.selPlaceholder.textContent = this.selOpts[ this.current ].textContent;\r\n\t\t\t}\r\n\t\t\tclassie.remove( this.selEl, 'cs-active' );\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif( this.hasDefaultPlaceholder && this.options.stickyPlaceholder ) {\r\n\t\t\t\t// everytime we open we wanna see the default placeholder text\r\n\t\t\t\tthis.selPlaceholder.textContent = this.selectedOpt.textContent;\r\n\t\t\t}\r\n\t\t\tclassie.add( this.selEl, 'cs-active' );\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * change option - the new value is set\r\n\t */\r\n\tSelectFx.prototype._changeOption = function() {\r\n\t\t// if pre selected current (if we navigate with the keyboard)...\r\n\t\tif( typeof this.preSelCurrent != 'undefined' && this.preSelCurrent !== -1 ) {\r\n\t\t\tthis.current = this.preSelCurrent;\r\n\t\t\tthis.preSelCurrent = -1;\r\n\t\t}\r\n\r\n\t\t// current option\r\n\t\tvar opt = this.selOpts[ this.current ];\r\n\r\n\t\t// update current selected value\r\n\t\tthis.selPlaceholder.textContent = opt.textContent;\r\n\r\n\t\t// change native select element´s value\r\n\t\tthis.el.value = opt.getAttribute( 'data-value' );\r\n\r\n\t\t// remove class cs-selected from old selected option and add it to current selected option\r\n\t\tvar oldOpt = this.selEl.querySelector( 'li.cs-selected' );\r\n\t\tif( oldOpt ) {\r\n\t\t\tclassie.remove( oldOpt, 'cs-selected' );\r\n\t\t}\r\n\t\tclassie.add( opt, 'cs-selected' );\r\n\r\n\t\t// if there´s a link defined\r\n\t\tif( opt.getAttribute( 'data-link' ) ) {\r\n\t\t\t// open in new tab?\r\n\t\t\tif( this.options.newTab ) {\r\n\t\t\t\twindow.open( opt.getAttribute( 'data-link' ), '_blank' );\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\twindow.location = opt.getAttribute( 'data-link' );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// callback\r\n\t\tthis.options.onChange( this.el.value );\r\n\t}\r\n\r\n\t/**\r\n\t * returns true if select element is opened\r\n\t */\r\n\tSelectFx.prototype._isOpen = function(opt) {\r\n\t\treturn classie.has( this.selEl, 'cs-active' );\r\n\t}\r\n\r\n\t/**\r\n\t * removes the focus class from the option\r\n\t */\r\n\tSelectFx.prototype._removeFocus = function(opt) {\r\n\t\tvar focusEl = this.selEl.querySelector( 'li.cs-focus' )\r\n\t\tif( focusEl ) {\r\n\t\t\tclassie.remove( focusEl, 'cs-focus' );\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * add to global namespace\r\n\t */\r\n\twindow.SelectFx = SelectFx;\r\n\r\n} )( window );\r\n","(function() {\r\n    [].slice.call( document.querySelectorAll( 'select' ) ).forEach( function(el) {\r\n        el.className = el.className + \" cs-select\";\r\n\r\n        new SelectFx(el, {\r\n            newTab : false,\r\n            stickyPlaceholder: false,\r\n            onChange: function(val, el) {\r\n                $('select').trigger('change')\r\n            }\r\n        });\r\n    });\r\n})();\r\n"],"sourceRoot":"assets/scripts/"}